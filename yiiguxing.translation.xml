<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="387" />
    <option name="newTranslationDialogWidth" value="835" />
    <option name="newTranslationDialogX" value="331" />
    <option name="newTranslationDialogY" value="245" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="repair Staff Name" />
      <item value="converter" />
      <item value="Returns true if this request should cache the original unmodified data." />
      <item value="Writes retrieved data directly to the disk cache before it's decoded." />
      <item value="Writes resources to disk after they've been decoded." />
      <item value="Setter for max size for both width and height of bitmap that will be decoded from an input Uri and used in the view." />
      <item value="set to true to let user resize crop bounds (disabled by default)" />
      <item value="This method sets multiplier that is used to calculate max image scale from min image scale." />
      <item value="Maintain" />
      <item value="machine Component Names" />
      <item value="machine Type Name" />
      <item value="machine Position Name" />
      <item value="ACTION MANAGE OVERLAY PERMISSION" />
      <item value="qualification Certificate Deferred List" />
      <item value="Practitioner Type" />
      <item value="Clinical Department" />
      <item value="Certification Type" />
      <item value="practitioner Type List" />
      <item value="material Name" />
      <item value="Preview of new language features: JVM records support, sealed interfaces, and stable inline classes. KotlinJVM: IR backend is now in Beta. KotlinNative: performance improvements, new `watchosX64` simulator target, support for Xcode 12.2 libraries. KotlinJS: prototype lazy initialization of top-level properties. Support for Gradle configuration cache. Standard library API improvements: locale-agnostic API for upperlowercasing text and clear Char-to-code and Char-to-digit conversions." />
      <item value="保养" />
      <item value="Conversation Icon View" />
      <item value="do nothing" />
      <item value="doctor Certificate" />
      <item value="List = certification?" />
      <item value="clinical Department List" />
      <item value="Returns whether the primary sharedexternal storage media is physically removable." />
      <item value="说明" />
      <item value="Mission Statement" />
      <item value="Ask For Task" />
      <item value="Construction" />
      <item value="施工" />
      <item value="add From Customer" />
      <item value="Mission Statement Activity" />
      <item value="uses Cleartext Traffic" />
      <item value="Gloading Certification Pending Review View" />
      <item value="NOT APPLIED" />
      <item value="PENDING REVIEW" />
      <item value="mould Status" />
      <item value="maintain Status" />
      <item value="模具" />
      <item value="ACTION SCREEN OFF" />
      <item value="@deprecated Instead of retaining the Fragment itself, use a non-retained Fragment and keep retained state in a ViewModel attached to that Fragment. The ViewModel's constructor and its onCleared() callback provide the signal for initial creation and final destruction of the retained state." />
      <item value="turn passcode on off" />
      <item value="PREVIEW POST PROCESSING MODE" />
      <item value="Return the primary sharedexternal storage directory where this application's OBB files (if there are any) can be found. Note if the application does not have any OBB files, this directory may not exist. &lt;p&gt;" />
      <item value="Returns absolute path to application-specific directory in the preloaded cache. &lt;p&gt;Files stored in the cache directory can be deleted when the device runs low on storage. There is no guarantee when these files will be deleted." />
      <item value="Retrieve, creating if needed, a new directory in which the application can place its own custom data files. You can use the returned File object to create and access files in this directory. Note that files created through a File object will only be accessible by your own application; you can only set the mode of the entire directory, not of individual files." />
      <item value="Coroutine" />
      <item value="Adds the given observer to the observers list. This call is similar to {@link LiveDataobserve(LifecycleOwner, Observer)} with a LifecycleOwner, which is always active. This means that the given observer will receive all events and will never be automatically removed. You should manually call {@link removeObserver(Observer)} to stop observing this LiveData. While LiveData has one of such observers, it will be considered as active." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="902" />
        <entry key="ENGLISH" value="903" />
        <entry key="ESTONIAN" value="1" />
        <entry key="AFRIKAANS" value="1" />
        <entry key="DANISH" value="4" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="1" />
        <entry key="BENGALI" value="2" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="ITALIAN" value="1" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1617773629430" />
  </component>
</application>